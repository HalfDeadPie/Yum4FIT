Yum4FIT
=============

The Yum4FIT is the application, which may be used for increasing your cookings skills. The main idea of the application
is the leveling up thanks to cooking food according to recipes generated by the Yum4FIT application.

    - The user of the application starts from the *level 1*.
    - When the command for generating recipes is selected, the task of the user is to cook the food.
    - The user is able to upload the photo of the meal to Instagram and gain *XP* points depending on the count of *likes*

API
---------------------

To achieve proper functioning of the application, I've decieded to use::

    - non-oficial existing code of Instagram API (login, upload photo, get list of photos, get like counts, ...)::

        https://github.com/LevPasha/Instagram-API-python

    - my implementation of Yummly API to generate and search recipes (accepted request to use it for academic purpose - 30k calls, 5-10 users)::

        WEB: https://www.yummly.com/
        API: https://developer.yummly.com/

Command line part
---------------------

*Main usage: Click, Requests*

**Login using Instagram username and password**

**Logout**

**Recipe-generating command** generates the recipe. The user is able to select

    - difficulty of the recipe computed from the count of ingredients and time to cook the food
    - filter the diet recipes
    - filter the national quisines
    - filter ingredients(?)
    - filter the holiday recipes
    - filter the recipes with different time of cooking
    - the command can load settings from configuration file

    The recipe will be printed into the command line.

**Command to upload photo on instagram**

    - the user is able to upload photo on instagram via command line setting the path to photo as argument
    - the user is able to set the caption of photo

**Command to list all Yum4FIT food photos**

    - there will be all URLs and IDs of photos with captions printed to the console
    - user can use this to check the count of likes to achieve XP gain from photo (id of photo set as argument for example)

**Command to receive XP from instagram photo**

    - the user is able to check the XP gain from all the instagram photos of Yum4FIT food (thanks to automatic #Yum4FIT)
    - the user is able to check the XP gain from single instagram photo - ID of media as an argument

**Command to add friend's username to Yum4FIT friends list**

GUI part
---------------------

    *Main usage: PyQt, Requests*
    - provides the same options and services like the command line application, but via graffic interface
    - display photos of the Yum4FIT user's foods and short info all the time without using the command


Web part
---------------------

The web part summarize short info about the user
*Main usage: Flask, Requets*

**Show the actual/last recipe of food**
**List all the photos of foods from instagram with short info**
**Offer and option for the other users of instagram to log in and give a like on certain food**
**If the logged person is in special list of Yum4FIT friends, than likes from this person provides 5x more XP than the ordinary like**

    - this should represent the option to cook for the friend, who can give you the like for the food which he has really eaten.
    - probably there will be 1list for 1food to achieve ability to "eat different food with different friends"
    - Example: When your friend visits you, you are able to generate recipe, cook it and eat it together. If the friend decides to give you like
        for that food, It's more valuable than ordinary likes from the users of instagram, who has just seen the photo of the food.

Tests
---------------------

Documentations
---------------------

Potential problems
---------------------

    - reduntant XP gaining from one photo - must save the like counts